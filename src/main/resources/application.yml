spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ENC(QeCkAS5TXOpoGMC6GtwSush6b07xgTyaETN4gReI5K4kkRYaAG5BiOEO5eCXT+7AMYBrgGdE65LhDAuv+ot/n/skjvOBcyLVYBw65ZfE3OKVr+ABWvS2Tw==)
            client-secret: ENC(eo8fs7mnS3dYWTQuR6rzcemqvNUvheOQoBXSd3U/if9aayLCvmCrI4fQTWfsfWK9)
            scope: profile,email,openid

cloud:
  aws:
    credentials:
      accessKey: ENC(JwnrnzPNOFIMgRzGoDYBiFC6cw0//hHk00NCXetkydU=)
#      accessKey: ${{ secrets.AWS_ACCESS_KEY_ID }}
      secretKey: ENC(MdW1froGz5vtH5EMt6cy/1El7qfJVLmcTaP2ahDyQa47rGq9FlXodkUJrwm6eAyhsHqGtWvukJk=)
#      secretKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      instanceProfile : true
    s3:
#      bucket: ENC(RDS+2kmnrtjcooa8RQhZPVEohW9ZWy6KTJQdlEJEVg8=)
      bucket: bucket-chorok
    region:
      static: ap-northeast-2
    stack:
      auto: false


jasypt:
  encryptor:
    bean: jasyptStringEncryptor
    password: ${CUSTOMPASSWORD}
    property:
      prefix: ENC(
      suffix: )
